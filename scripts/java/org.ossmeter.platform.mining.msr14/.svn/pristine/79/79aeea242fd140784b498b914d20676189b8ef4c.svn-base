package org.ossmeter.platform.mining.msr14.model;

@db
class Biodiversity {
	val User[*] users;
	val Project[*] projects;
}

class User {
	attr String login;
	attr String ~id;
	attr String location;
	attr int publicRepos;
	attr String joinedDate;

	attr int followerCount; // Needed because not all GitHub users are in the dataset
	attr int followingCount;// Needed because not all GitHub users are in the dataset
	ref User[*] followers;
	ref User[*] following;
	
	ref Project[*] owns;
	ref Project[*] watches;
	ref Project[*] forks;
	ref Project[*] commitsAsAuthor;
	ref Project[*] commitsAsCommitter;
	ref Project[*] commentsOnCommits;
	ref Project[*] submitsIssues;
	ref Project[*] commentsOnIssues;
	ref Project[*] submitsPullRequests;
	ref Project[*] commentsOnPullRequests;
	
	val Countable issues;
	val Countable issueComments;
	val IssueEvent[*] issueEvents;
	val Countable pullRequests;
	val Countable pullRequestComments;
	val Commit commitAuthors;
	val Commit commitCommitter;
	val Countable commitComments;
	
	val Artefact[*] artefacts;	
}

class Project {
	attr String ~id;
	attr String name;
	attr String ownerName; // To enable quick querying
	attr String createdAt;
	attr int size; // TODO: Not sure what this value means? Look up in API
	attr int watchersCount;
	attr int watchersCount2;
	attr String language;
	attr int forks;
	attr int forksCount;
	attr int openIssuesCount;
	attr int openIssues;
	attr int networkCount;
	ref User owner;
	ref User[*] watchers;
	
	val IssueEvent[*] issueEvents;
	
	attr int numberOfCommits;
	attr int numberOfIssues;
	attr int numberOfCommitComments;
	attr int numberOfIssueComments;
	attr int numberOfPullRequests;
	attr int numberOfPullRequestComments;
}

class IssueEvent{
	attr IssueEventKind eventKind;
	attr int count; 
}

enum IssueEventKind {
	CLOSED; REOPENED; SUBSCRIBED; MERGED; REFERENCED; MENTIONED; UNSUBSCRIBED;
	ASSIGNED; HEAD_REF_DELETED; HEAD_REF_CLEANED; HEAD_REF_RESTORED;
}

class Countable {
	attr int number;
	attr int frequency;
} 

class Commit extends Countable {
	attr int total;
	attr int additions;
	attr int deletions;
	attr int totalFiles;
	attr double averageFilesPerCommit;
}

class Artefact {
	@searchable
	attr String extension;
	attr int numberOfProjects; // This relates to cases where a file kind matches a project's language
	attr int count;
}